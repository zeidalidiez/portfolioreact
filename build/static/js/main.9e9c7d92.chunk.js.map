{"version":3,"sources":["components/Thumbnail.js","components/Projects.js","components/Contact.js","components/About.js","components/App.js","reportWebVitals.js","index.js"],"names":["Thumbnail","props","className","href","link","src","image","alt","title","category","Projects","Contact","submitForm","bind","state","status","this","onSubmit","action","method","type","name","ev","preventDefault","form","target","data","FormData","xhr","XMLHttpRequest","open","setRequestHeader","onreadystatechange","readyState","DONE","reset","setState","send","React","Component","About","class","App","exact","path","component","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e9c7d92.chunk.js","sourcesContent":["import React from 'react';\r\n// import {Link} from 'react-router-dom'; link commented out as 'a' is required to href to external site\r\nimport './App.css';\r\n \r\nfunction Thumbnail(props) {\r\n  return (\r\n    <div className=\"project\">\r\n      <a href={props.link}>\r\n        <div className=\"project-image\">\r\n            <br />\r\n          <img src={props.image} alt=\"selected thumbnail\"/>\r\n        </div>\r\n        <div className=\"project-title\">{props.title}</div>\r\n        <div className=\"project-category\">{props.category}</div>\r\n            </a>\r\n    </div>\r\n  )\r\n}\r\n \r\nexport default Thumbnail;","import React from 'react';\r\nimport Thumbnail from './Thumbnail.js'; // Import the Thumbnail component\r\nimport './App.css';\r\n \r\nfunction Projects(props) {\r\n  return (\r\n    // Render a Thumbnail component\r\n    <div className=\"projectDiv\">\r\n      <h2>Projects</h2>\r\n      <Thumbnail\r\n        link=\"https://github.com/zeidalidiez/covid-frontend-master\"\r\n        image=\"https://i.imgur.com/BLBVkZO.png\"\r\n        title=\"Pandemic DogWalkers\"\r\n        category=\"\"\r\n      />\r\n      <Thumbnail\r\n        link=\"https://github.com/zeidalidiez/spaced-repetition\"\r\n        image=\"https://i.imgur.com/M4Og8gT.png\"\r\n        title=\"Spaced Repetition Language Learning\"\r\n        category=\"\"\r\n      />\r\n      <Thumbnail\r\n        link=\"https://github.com/zeidalidiez/ZRPG_Frontend\"\r\n        image=\"https://i.imgur.com/1eDLzS9.png\"\r\n        title=\"ReadNext - A book reader's To-Do List\"\r\n        category=\"\"\r\n      />\r\n      <Thumbnail\r\n        link=\"https://github.com/zeidalidiez/Phaser-Test\"\r\n        image=\"https://i.imgur.com/QIRiV4R.png\"\r\n        title=\"Phaser 2D webrpg proof of concept\"\r\n        category=\"\"\r\n      />  \r\n    </div>\r\n  )\r\n}\r\n \r\nexport default Projects;","import React from \"react\";\r\n\r\nexport default class Contact extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.submitForm = this.submitForm.bind(this);\r\n    this.state = {\r\n      status: \"\"\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { status } = this.state;\r\n    return (\r\n      <form\r\n        onSubmit={this.submitForm}\r\n        action=\"https://formspree.io/f/xgepqqzv\"\r\n        method=\"POST\"\r\n      >\r\n <h2>Contact Me</h2>\r\n <div className=\"emailInput\"> \r\n        <label>Email:</label>\r\n        <input type=\"email\" name=\"email\" />\r\n        </div>\r\n        <div className=\"messageInput\">\r\n        <label>Message:</label>\r\n        <input type=\"text\" name=\"message\" />\r\n        </div>\r\n        {status === \"SUCCESS\" ? <p>Thanks!</p> : <button>Submit</button>}\r\n        {status === \"ERROR\" && <p>Ooops! There was an error.</p>}\r\n      </form>\r\n    );\r\n  }\r\n\r\n  submitForm(ev) {\r\n    ev.preventDefault();\r\n    const form = ev.target;\r\n    const data = new FormData(form);\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.open(form.method, form.action);\r\n    xhr.setRequestHeader(\"Accept\", \"application/json\");\r\n    xhr.onreadystatechange = () => {\r\n      if (xhr.readyState !== XMLHttpRequest.DONE) return;\r\n      if (xhr.status === 200) {\r\n        form.reset();\r\n        this.setState({ status: \"SUCCESS\" });\r\n      } else {\r\n        this.setState({ status: \"ERROR\" });\r\n      }\r\n    };\r\n    xhr.send(data);\r\n  }\r\n}","import React from \"react\"\r\n \r\nfunction About(props) {\r\n  return (\r\n    <div className=\"aboutDiv\">\r\n      <h2>About Zeid</h2>\r\n      <p>With prior experience in tech project management as well as IT, I specialize in bridging the communication gap between experts and end-users, taking charge of seeing a project to completion from the very beginning, engaging in thorough research and performing logical checks and tests along the way - all while maintaining an open line of communication with my superior on the status and expected outcomes of all current projects. </p>\r\n      <p>I love learning and seeking new experiences. Years as a program administrator for a large telecom company eventually led me to the field of IT, in which I developed the skills to track and execute complex projects. I further refined my project managing abilities while interning at a tech focused advertising company, where I increased my knowledge and abilities of timekeeping, scheduling and project management immensely.</p>\r\n      <p>I'm Located in Auburn, WA - close to both Seattle and Tacoma. Get in touch with me about how we can work together to build something exciting! </p>\r\n      <p>I have spent all of my life fiddling around with scripting as a hobby for various video games and modifications of existing games.</p>\r\n      <p>I love to 'take things apart' and figure out how they work - they're all fun logic puzzles. I love thinking of ways to efficiently relay mental models and ideas to others, increasing my team's communication as well as strengthening my own.</p>\r\n\r\n      <a href=\"https://www.linkedin.com/in/zeid-diez/\" class=\"fa fa-linkedin\">LinkedIn</a>\r\n      <a href=\"https://github.com/zeidalidiez\" class=\"fa fa-github\">Github</a>\r\n    </div>\r\n  )\r\n}\r\n \r\nexport default About;","// App.jsx\r\n \r\nimport React from 'react';\r\n// Import the BrowserRouter, Route and Link components\r\nimport {Route, BrowserRouter as Router, Link} from \"react-router-dom\";\r\nimport Projects from './Projects.js'; \r\nimport Contact from './Contact.js'; \r\nimport About from './About.js'; \r\nimport './App.css';\r\n \r\nfunction App() {\r\n  return (\r\n    <header>\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Route exact path=\"/Projects\" component={Projects} />\r\n        <Route exact path=\"/Contact\" component={Contact} />\r\n        <Route exact path=\"/About\" component={About} />\r\n        <Route exact path=\"/\" component={About} />\r\n  <nav>\r\n        <div className=\"navigation\">\r\n          <div className=\"navigation-sub\">\r\n            <Link to=\"/Projects\" className=\"item\">Projects</Link>\r\n            <Link to=\"/Contact\" className=\"item\">Contact</Link>\r\n            <Link to=\"/About\" className=\"item\">About</Link>\r\n  \r\n          </div>\r\n        </div>\r\n        </nav>\r\n      </div>\r\n    </Router>\r\n    <menu>\r\n\r\n</menu>\r\n    </header>\r\n\r\n\r\n  );\r\n}\r\n \r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n  <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}